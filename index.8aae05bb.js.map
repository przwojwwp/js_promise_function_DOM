{"mappings":"ACEA,SAAS,EAAQ,CAAO,CAAE,CAAS,EACjC,OAAO,IAAI,QAAQ,SAAC,CAApB,EACE,EAAQ,gBAAgB,CAAC,EAAW,WAClC,EAAS,UACP,MAAA,CADgB,EAAU,4BACD,MAAA,CAAzB,EAAQ,QAAQ,CAAC,UAAmB,MAAA,CAAX,EAAQ,EAAE,CAAC,KACxC,EAAG,CAAE,KAAM,CAAA,CAAK,EAClB,EACF,CAEA,IAAM,EAAe,SAAC,CAAtB,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,WAC3B,EAAa,WAAW,CAAG,EAC3B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEM,EAAa,SAAS,cAAc,CAAC,SACrC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAS,SAAS,cAAc,CAAC,UAEvC,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GACrC,EAAQ,EAAQ,SAAS,IAAI,CAAC,GAE9B,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GAErC,EAAQ,EAAY,QAAQ,IAAI,CAAC,GACjC,EAAQ,EAAe,QAAQ,IAAI,CAAC,GACpC,EAAQ,EAAQ,QAAQ,IAAI,CAAC,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction waitFor(element, eventName) {\n    return new Promise(function(resolve) {\n        element.addEventListener(eventName, function() {\n            resolve(\"It was \".concat(eventName, \" on the element:\\n      \").concat(element.nodeName, \", id: \").concat(element.id, \".\"));\n        }, {\n            once: true\n        });\n    });\n}\nvar printMessage = function(message) {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"message\");\n    notification.textContent = message;\n    document.body.appendChild(notification);\n};\nvar loginField = document.getElementById(\"login\");\nvar passwordField = document.getElementById(\"password\");\nvar button = document.getElementById(\"submit\");\nwaitFor(loginField, \"click\").then(printMessage);\nwaitFor(passwordField, \"click\").then(printMessage);\nwaitFor(button, \"click\").then(printMessage);\nwaitFor(loginField, \"input\").then(printMessage);\nwaitFor(passwordField, \"input\").then(printMessage);\nwaitFor(loginField, \"blur\").then(printMessage);\nwaitFor(passwordField, \"blur\").then(printMessage);\nwaitFor(button, \"blur\").then(printMessage);\n\n//# sourceMappingURL=index.8aae05bb.js.map\n","'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element:\n      ${element.nodeName}, id: ${element.id}.`);\n    }, { once: true });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('message');\n  notification.textContent = message;\n  document.body.appendChild(notification);\n};\n\nconst loginField = document.getElementById('login');\nconst passwordField = document.getElementById('password');\nconst button = document.getElementById('submit');\n\nwaitFor(loginField, 'click').then(printMessage);\nwaitFor(passwordField, 'click').then(printMessage);\nwaitFor(button, 'click').then(printMessage);\n\nwaitFor(loginField, 'input').then(printMessage);\nwaitFor(passwordField, 'input').then(printMessage);\n\nwaitFor(loginField, 'blur').then(printMessage);\nwaitFor(passwordField, 'blur').then(printMessage);\nwaitFor(button, 'blur').then(printMessage);\n"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","concat","nodeName","id","once","printMessage","message","notification","document","createElement","classList","add","textContent","body","appendChild","loginField","getElementById","passwordField","button","then"],"version":3,"file":"index.8aae05bb.js.map"}